#!/bin/bash

# logcmd
#
# Purpose: To log a command, and it's result code, to a log file.
#
# To use:
#   set logtarget


# Set the default log file location if logtarget is not set
if [ -z "$logtarget" ]; then
    tmptarget="${HOME}/bin/AkienApps/logs/tmp"
    test ! -d "${tmptarget}" && mkdir "${tmptarget}"
    logtarget="${tmptarget}/${0##*/}.log"
    export logtarget
fi

# Now check to see if we have to create an empty file
if [ ":$1" == ":-n" ] ; then
    : > "${logtarget}" # Clear or create the log file
    shift
fi

# Akien's original code used: $@
command_line="$*"

if [ ! ":${command_line}" == ":" ] ; then
    # Define a function to get the timestamp in the required format
    timestamp() {
        date +"%Y-%m-%d.%H:%M:%S.%4N"
    }

    contarget=/tmp/contarget.log
    : > "${contarget}"

    # Log the command about to be executed
    echo "$(timestamp) \$ ${command_line}" | tee -a "${logtarget}"

    # Execute the command and redirect both stdout and stderr to the log file
    eval "$command_line" > "${contarget}" 2>&1

    # Capture the result code of the command
    result_code=$?

    # Check if the log file has content and display it line by line
    #while IFS= read -r line; do
    #    echo "$line"
    #done < "${logtarget}"
    cat "${contarget}" | tee -a "${logtarget}"

    # Log the result code
    echo "$(timestamp) \$ result_code=$result_code" | tee -a "${logtarget}"
    echo "" | tee -a "${logtarget}"

    # Export the result code for further use if needed
    export result_code

    # Return the result code (optional)
    return "$result_code"
fi
